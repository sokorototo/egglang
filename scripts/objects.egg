# Create a new object, returning an Object Reference
# The Object Reference is used to identify the object when we want to perform actions on it
define(class_mates, object.new())

# Objects have type "Object"
assert(equals(Object, typeof(class_mates)), "object should exist here")

# Insertion values into the object
object.insert(class_mates, "Steve", "Goofy Ahh Block Puncher")
object.insert(class_mates, "Alex", "Who even?")
object.insert(class_mates, "Newton Toto", "Me, :P")

# Get values from the object
define(steve, object.get(class_mates, "Steve"))
assert(equals(steve, "Goofy Ahh Block Puncher"), "Steve should be Goofy Ahh Block Puncher")
println("Steve: ", steve)

# Check if a object has a value
assert(object.has(class_mates, "Steve"), "object should have Steve")

# Check the size of the object
assert(equals(object.size(class_mates), 3), "object size should be 3")

# Remove a value from the object
object.remove(class_mates, "Steve")
assert(equals(object.size(class_mates), 2), "object size should be 2, one less than before")

# Use any primitive as a key
object.insert(class_mates, 1, "Look at me, I'm just a statistic")

# Log an object to the console
println(class_mates)

# You can delete an object using delete
delete(class_mates)
assert(not(exists(class_mates)), "object should not exist here")
